# Generated by Django 2.2.5 on 2019-11-17 04:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('TestModel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('BikeId', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='平台统一编号')),
                ('CompanyName', models.CharField(max_length=10, verbose_name='所属企业')),
                ('BikeState', models.IntegerField(choices=[(1, '可用'), (0, '待维修')], default='可用')),
                ('LocationX', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='经度')),
                ('LocationY', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='纬度')),
                ('LaunchTime', models.DateField(default=django.utils.timezone.now, verbose_name='投放时间')),
                ('Battery', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='电量')),
                ('ServiceLife', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(3)], verbose_name='使用年限')),
            ],
            options={
                'verbose_name': 'Bike',
                'db_table': 'Bike',
            },
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('CenterId', models.CharField(max_length=3, primary_key=True, serialize=False, verbose_name='维修中心编号')),
                ('Location', models.CharField(max_length=20, verbose_name='地址')),
                ('BrakeNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='刹车数量')),
                ('WheelNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='车轮数量')),
                ('PedalNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='脚踏数量')),
                ('SaddleNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='车座数量')),
                ('QRcodeNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='二维码数量')),
                ('LockNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='车锁数量')),
                ('ChainNum', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='链条数量')),
            ],
            options={
                'verbose_name': 'Center',
                'db_table': 'Center',
            },
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('CompanyName', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='企业名称')),
                ('BikeNumAll', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='共享单车总数')),
                ('BikeNumRun', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='运营单车总数')),
                ('BikeNumRepair', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(0)], verbose_name='维修单车总数')),
                ('CompanyIncome', models.IntegerField(verbose_name='运营收入')),
            ],
            options={
                'verbose_name': 'CompanyInfo',
                'db_table': 'CompanyInfo',
            },
        ),
        migrations.CreateModel(
            name='RepairRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BreakDownTime', models.DateField(default=django.utils.timezone.now, verbose_name='损坏发生时间')),
                ('RepairTime', models.DateField(default=django.utils.timezone.now, verbose_name='维修完成时间')),
                ('CenterId', models.CharField(max_length=3, verbose_name='维修中心编号')),
                ('RepairParts', models.CharField(max_length=7, verbose_name='维修部位')),
                ('Brake', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='刹车')),
                ('Wheel', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='车轮')),
                ('Pedal', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='脚踏')),
                ('Saddle', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='车座')),
                ('QRcode', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='二维码')),
                ('Lock', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='车锁')),
                ('Chain', models.IntegerField(choices=[(1, '损坏'), (0, '完好')], verbose_name='链条')),
                ('Remark', models.CharField(max_length=200, verbose_name='备注')),
                ('BikeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestModel.Bike')),
            ],
            options={
                'verbose_name': 'RepairRecords',
                'db_table': 'RepairRecords',
            },
        ),
        migrations.CreateModel(
            name='IllegalParking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(max_length=11, verbose_name='骑行用户id')),
                ('LocationX', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='经度')),
                ('LocationY', models.DecimalField(decimal_places=3, max_digits=5, verbose_name='纬度')),
                ('ParkingTime', models.DateField(auto_now=True, verbose_name='停车时间')),
                ('BikeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestModel.Bike')),
            ],
            options={
                'verbose_name': 'IllegalParking',
                'db_table': 'IllegalParking',
            },
        ),
        migrations.CreateModel(
            name='CyclingRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(max_length=11, verbose_name='骑行用户id')),
                ('StartTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='开始时间')),
                ('EndTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='结束时间')),
                ('LocationX', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='经度')),
                ('LocationY', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='纬度')),
                ('BikeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestModel.Bike')),
            ],
            options={
                'verbose_name': 'CyclingRecords',
                'db_table': 'CyclingRecords',
            },
        ),
    ]
